[{"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx":"1","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx":"2","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx":"3","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts":"4","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\app\\App.tsx":"5","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\index.ts":"6","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\authApiLocal.ts":"7","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.reducer.ts":"8","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.actions.ts":"9","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login\\login.components.tsx":"10","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation\\navigation.component.tsx":"11","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\configureStore.ts":"12","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\history.ts":"13","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\repository\\repository.ts":"14","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\repository\\index.ts":"15"},{"size":521,"mtime":1608669126996,"results":"16","hashOfConfig":"17"},{"size":200,"mtime":1608640154085,"results":"18","hashOfConfig":"17"},{"size":125,"mtime":1608669147933,"results":"19","hashOfConfig":"17"},{"size":129,"mtime":1609212040647,"results":"20","hashOfConfig":"17"},{"size":1306,"mtime":1609212070747,"results":"21","hashOfConfig":"17"},{"size":447,"mtime":1608697519013,"results":"22","hashOfConfig":"17"},{"size":1807,"mtime":1608718871498,"results":"23","hashOfConfig":"17"},{"size":851,"mtime":1608712595591,"results":"24","hashOfConfig":"17"},{"size":1469,"mtime":1608719306358,"results":"25","hashOfConfig":"17"},{"size":3713,"mtime":1608719183202,"results":"26","hashOfConfig":"17"},{"size":2170,"mtime":1609212138394,"results":"27","hashOfConfig":"17"},{"size":635,"mtime":1608713577168,"results":"28","hashOfConfig":"17"},{"size":102,"mtime":1608715659891,"results":"29","hashOfConfig":"17"},{"size":2369,"mtime":1608221358058,"results":"30","hashOfConfig":"17"},{"size":72,"mtime":1608198205803,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"r3iy8c",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx",[],["64","65"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\app\\App.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\authApiLocal.ts",["66"],"import { AuthApi } from \"../interfaces/auth.api\";\r\nimport { apiData, AppResponse } from \"../types\";\r\nimport { DT_User, Repository } from \"./repository\";\r\n\r\nexport class AuthApiLocal implements AuthApi {\r\n\r\n    constructor(\r\n        private readonly usersRepo: Repository<DT_User>\r\n    ) {\r\n\r\n    }\r\n\r\n    async login(input: apiData.LoginInput): Promise<AppResponse<apiData.LoginOutput>> {\r\n        await this.sleep(2000);\r\n\r\n        try {\r\n            console.log(input);\r\n            const user = await this.usersRepo.findOne(x => x.username == input.username);\r\n            if (!user) return {\r\n                success: false,\r\n                error: {\r\n                    type: 'form',\r\n                    formErrors: { 'username': 'User not found.' }\r\n                }\r\n            }\r\n\r\n            if (user.password !== input.password) {\r\n                return {\r\n                    success: false,\r\n                    error: {\r\n                        type: 'form',\r\n                        formErrors: { 'password': 'Invalid password.' }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                data: {\r\n                    token: 'test_auth_token',\r\n                    userInfo: {\r\n                        username: user.username,\r\n                        id: user.id\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            return {\r\n                success: false,\r\n                error: { type: 'message', message: 'Unhandled error' }\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    private sleep(ms: number): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, ms);\r\n        });\r\n    }\r\n}","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.reducer.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.actions.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login\\login.components.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation\\navigation.component.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\configureStore.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\history.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\repository\\repository.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\api\\local\\repository\\index.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":18,"column":71,"nodeType":"73","messageId":"74","endLine":18,"endColumn":73},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]