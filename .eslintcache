[{"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\App.tsx":"1","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx":"2","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx":"3","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx":"4","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts":"5","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\services\\auth.service.ts":"6","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\index.ts":"7","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testDatabase.ts":"8","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\createServices.ts":"9","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\index.ts":"10","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testServiceStore.ts":"11","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\repository.ts":"12","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login.components.tsx":"13","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\reducer.ts":"14","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation.component.tsx":"15","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\index.ts":"16","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\index.ts":"17","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\action.creators.ts":"18"},{"size":948,"mtime":1608604395095,"results":"19","hashOfConfig":"20"},{"size":517,"mtime":1607792342441,"results":"21","hashOfConfig":"20"},{"size":200,"mtime":1608640154085,"results":"22","hashOfConfig":"20"},{"size":155,"mtime":1607844356685,"results":"23","hashOfConfig":"20"},{"size":82,"mtime":1607844657871,"results":"24","hashOfConfig":"20"},{"size":186,"mtime":1607876451239,"results":"25","hashOfConfig":"20"},{"size":305,"mtime":1608636540709,"results":"26","hashOfConfig":"20"},{"size":403,"mtime":1608221122514,"results":"27","hashOfConfig":"20"},{"size":211,"mtime":1607872352429,"results":"28","hashOfConfig":"20"},{"size":72,"mtime":1608198205803,"results":"29","hashOfConfig":"20"},{"size":1885,"mtime":1608221240206,"results":"30","hashOfConfig":"20"},{"size":2369,"mtime":1608221358058,"results":"31","hashOfConfig":"20"},{"size":3576,"mtime":1608662380062,"results":"32","hashOfConfig":"20"},{"size":656,"mtime":1608662266257,"results":"33","hashOfConfig":"20"},{"size":2291,"mtime":1608603710278,"results":"34","hashOfConfig":"20"},{"size":115,"mtime":1608604301531,"results":"35","hashOfConfig":"20"},{"size":29,"mtime":1608661825341,"results":"36","hashOfConfig":"20"},{"size":906,"mtime":1608662427174,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r3iy8c",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\App.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx",[],["78","79"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx",[],["80","81"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts",[],["82","83"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\services\\auth.service.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testDatabase.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\createServices.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testServiceStore.ts",["84"],"import { AppResponse, IAuthService, LoginInput, LoginOutput } from \"../../services/interfaces\";\r\nimport { ServiceStore } from \"../../store/servicesStore\";\r\nimport { DT_User, Repository } from \"./repository\";\r\nimport { resolveTestDatabase } from \"./testDatabase\";\r\n\r\n// use test data for test services\r\nexport class TestAuthService implements IAuthService {\r\n\r\n    constructor(\r\n        private readonly usersRepo: Repository<DT_User>\r\n    ) {\r\n\r\n    }\r\n\r\n    async login(input: LoginInput): Promise<AppResponse<LoginOutput>> {\r\n        try {\r\n            const user = await this.usersRepo.findOne(x => x.username == input.username);\r\n            if (!user) return {\r\n                success: false,\r\n                error: {\r\n                    type: 'form',\r\n                    formErrors: { 'username': 'User not found.' }\r\n                }\r\n            }\r\n\r\n            if (user.password !== input.password) {\r\n                return {\r\n                    success: false,\r\n                    error: {\r\n                        type: 'form',\r\n                        formErrors: { 'password': 'Invalid password.' }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                data: {\r\n                    token: 'test_auth_token',\r\n                    userInfo: {\r\n                        username: user.username,\r\n                        id: user.id\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            return {\r\n                success: false,\r\n                error: { type: 'message', message: 'Unhandled error' }\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const createTestServiceStore = (): ServiceStore => {\r\n    const database = resolveTestDatabase();\r\n    return {\r\n        authService: new TestAuthService(new Repository(database.users))\r\n    };\r\n};\r\n","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\repository.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login.components.tsx",["85"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\reducer.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation.component.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\action.creators.ts",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"86","replacedBy":"92"},{"ruleId":"88","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":17,"column":71,"nodeType":"96","messageId":"97","endLine":17,"endColumn":73},{"ruleId":"98","severity":1,"message":"99","line":37,"column":45,"nodeType":"100","messageId":"101","endLine":37,"endColumn":53},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],["102"],["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]