[{"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\App.tsx":"1","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx":"2","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx":"3","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx":"4","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts":"5","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\services\\auth.service.ts":"6","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\index.ts":"7","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testDatabase.ts":"8","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\createServices.ts":"9","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\index.ts":"10","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testServiceStore.ts":"11","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\repository.ts":"12","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\routes\\index.ts":"13","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\routes\\login.route.tsx":"14","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\header.component.tsx":"15","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login.components.tsx":"16","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\reducer.ts":"17","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation.component.tsx":"18","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\index.ts":"19","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\index.ts":"20","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.state.ts":"21","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\action.creators.ts":"22"},{"size":948,"mtime":1608604395095,"results":"23","hashOfConfig":"24"},{"size":517,"mtime":1607792342441,"results":"25","hashOfConfig":"24"},{"size":200,"mtime":1608640154085,"results":"26","hashOfConfig":"24"},{"size":155,"mtime":1607844356685,"results":"27","hashOfConfig":"24"},{"size":82,"mtime":1607844657871,"results":"28","hashOfConfig":"24"},{"size":186,"mtime":1607876451239,"results":"29","hashOfConfig":"24"},{"size":305,"mtime":1608636540709,"results":"30","hashOfConfig":"24"},{"size":403,"mtime":1608221122514,"results":"31","hashOfConfig":"24"},{"size":211,"mtime":1607872352429,"results":"32","hashOfConfig":"24"},{"size":72,"mtime":1608198205803,"results":"33","hashOfConfig":"24"},{"size":1885,"mtime":1608221240206,"results":"34","hashOfConfig":"24"},{"size":2369,"mtime":1608221358058,"results":"35","hashOfConfig":"24"},{"size":61,"mtime":1608579415029,"results":"36","hashOfConfig":"24"},{"size":1413,"mtime":1608596160365,"results":"37","hashOfConfig":"24"},{"size":580,"mtime":1608596217386,"results":"38","hashOfConfig":"24"},{"size":3685,"mtime":1608638684395,"results":"39","hashOfConfig":"24"},{"size":582,"mtime":1608603298736,"results":"40","hashOfConfig":"24"},{"size":2291,"mtime":1608603710278,"results":"41","hashOfConfig":"24"},{"size":115,"mtime":1608604301531,"results":"42","hashOfConfig":"24"},{"size":66,"mtime":1608604599788,"results":"43","hashOfConfig":"24"},{"size":56,"mtime":1608578829562,"results":"44","hashOfConfig":"24"},{"size":1181,"mtime":1608639990282,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r3iy8c",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\App.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\index.tsx",[],["95","96"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\home.page.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\about.page.tsx",[],["97","98"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\pages\\index.ts",[],["99","100"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\services\\auth.service.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testDatabase.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\store\\createServices.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\testServiceStore.ts",["101"],"import { AppResponse, IAuthService, LoginInput, LoginOutput } from \"../../services/interfaces\";\r\nimport { ServiceStore } from \"../../store/servicesStore\";\r\nimport { DT_User, Repository } from \"./repository\";\r\nimport { resolveTestDatabase } from \"./testDatabase\";\r\n\r\n// use test data for test services\r\nexport class TestAuthService implements IAuthService {\r\n\r\n    constructor(\r\n        private readonly usersRepo: Repository<DT_User>\r\n    ) {\r\n\r\n    }\r\n\r\n    async login(input: LoginInput): Promise<AppResponse<LoginOutput>> {\r\n        try {\r\n            const user = await this.usersRepo.findOne(x => x.username == input.username);\r\n            if (!user) return {\r\n                success: false,\r\n                error: {\r\n                    type: 'form',\r\n                    formErrors: { 'username': 'User not found.' }\r\n                }\r\n            }\r\n\r\n            if (user.password !== input.password) {\r\n                return {\r\n                    success: false,\r\n                    error: {\r\n                        type: 'form',\r\n                        formErrors: { 'password': 'Invalid password.' }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                data: {\r\n                    token: 'test_auth_token',\r\n                    userInfo: {\r\n                        username: user.username,\r\n                        id: user.id\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            return {\r\n                success: false,\r\n                error: { type: 'message', message: 'Unhandled error' }\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const createTestServiceStore = (): ServiceStore => {\r\n    const database = resolveTestDatabase();\r\n    return {\r\n        authService: new TestAuthService(new Repository(database.users))\r\n    };\r\n};\r\n","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\utils\\testUtils\\repository\\repository.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\routes\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\routes\\login.route.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\header.component.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\login.components.tsx",["102","103"],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\reducer.ts",["104"],"import { stat } from \"fs\";\r\nimport { AuthActions } from \"./actions\";\r\nimport { AuthState } from \"./auth.state\";\r\n\r\nconst initialState: AuthState = {\r\n    user: 'no user'\r\n};\r\n\r\nexport function authReducer(state: AuthState = initialState, action: AuthActions): AuthState {\r\n    // log\r\n    console.log(\"authReducer:\", state);\r\n\r\n    switch (action.type) {\r\n        case \"AUTH_LOGIN\":\r\n            return { ...state, user: action.payload.username };\r\n        case \"AUTH_LOGOUT\":\r\n            return { ...state, user: 'no user' };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\navigation.component.tsx",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\components\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\index.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\auth.state.ts",[],"C:\\Projects\\github\\harutinAsrian\\tasku\\src\\features\\auth\\store\\action.creators.ts",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"107","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":17,"column":71,"nodeType":"115","messageId":"116","endLine":17,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":39,"column":13,"nodeType":"119","messageId":"120","endLine":39,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":40,"column":45,"nodeType":"119","messageId":"120","endLine":40,"endColumn":53},{"ruleId":"117","severity":1,"message":"122","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],["123"],["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'stat' is defined but never used.","no-global-assign","no-unsafe-negation"]